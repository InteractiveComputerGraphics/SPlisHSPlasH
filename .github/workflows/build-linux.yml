name: build-linux

on:
  push:
    branches: [ master ]

jobs:
  build-ubuntu:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
    - name: Install packages
      run: sudo apt-get -y install xorg-dev freeglut3-dev
    - name: configure
      run: mkdir build-release && cd build-release && cmake -DCMAKE_BUILD_TYPE=Release ..
    - name: build
      run: cmake --build build-release
    - name: tests
      run: cd bin && ./KernelTests

  build-manylinux-python:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        # python-version: [3.7]
        python-version: [cp27-cp27m, cp35-cp35m, cp36-cp36m, cp37-cp37m, cp38-cp38]

    steps:
    - uses: actions/checkout@v1

    # Set up python
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

      # Install dependencies
    - name: Install dependencies
      run: python -m pip install --upgrade twine

    - name: Build manylinux Python wheels
      uses: digitalillusions/python-wheels-manylinux-build@master
      with:
        # python-versions: 'cp37-cp37m'
        python-versions: '${{ matrix.python-version }}'
        build-requirements: ''
        system-packages: 'cmake3 libXrandr-devel libXinerama-devel libXcursor-devel libXi-devel mesa-libGLU-devel'
        package-path: ''
        pip-wheel-args: '--manylinux-build -DUSE_AVX=Off'

    # Upload artifacts
    - name: Upload compiled wheel
      uses: actions/upload-artifact@master
      with:
        name: pysplishsplash-linux-${{ matrix.python-version }}
        path: wheelhouse
      if: always()

    # Publish to pypi
    - name: Publish wheels to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload wheelhouse/*-manylinux*.whl --skip-existing

name: build-windows

on:
  push:
    branches: [ master ]

jobs:
  build-windows:

    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.7]
        # python-version: [2.7, 3.5, 3.6, 3.7, 3.8]

    steps:
    # Checkout repo
    - uses: actions/checkout@v1
      
    # Set up python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    
    # Configure, build and test
    - name: configure
      run: mkdir build-release;cd build-release;cmake ..
      shell: pwsh
    - name: build
      run: cmake --build build-release --config Release
    - name: tests
      run: cd bin;./KernelTests
      shell: pwsh

  # Build the python wheel in parallel
  build-windows-python:
    runs-on: windows-latest
    strategy:
      matrix:
        # python-version: [3.7]
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8]

    steps:
    # Checkout repo
    - uses: actions/checkout@v1

    # Set up python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    # Install python dependencies
    - name: Install dependencies
      run: python -m pip install --upgrade pip setuptools wheel twine

    # Change directory and run setup py
    - name: Run setup py
      run: python setup.py bdist_wheel

    # Upload artifacts
    - name: Upload compiled wheel
      uses: actions/upload-artifact@master
      with:
        name: pysplishsplash-windows-${{ matrix.python-version }}
        path: build/dist
      if: always()

    # Upload wheel to pypi
    - name: Upload wheel to pypi
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: twine upload build/dist/* --skip-existing
